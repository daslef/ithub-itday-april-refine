"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[47848],{47848:e=>{e.exports=JSON.parse('{"filePath":"/home/daslef/Downloads/refine/packages/core/src/index.tsx","description":"if you need to do something when the loading time exceeds the specified time, refine provides the `useLoadingOvertime` hook.\\nIt returns the elapsed time in milliseconds.","displayName":"useLoadingOvertime","props":{"isLoading":{"defaultValue":null,"description":"The loading state. If true, the elapsed time will be calculated.","name":"isLoading","required":true,"type":{"name":"boolean"},"tags":{}},"interval":{"defaultValue":{"value":": 1000 (1 second)"},"description":"The interval in milliseconds. If the loading time exceeds this time, the `onInterval` callback will be called.\\nIf not specified, the `interval` value from the `overtime` option of the `RefineProvider` will be used.","name":"interval","required":false,"type":{"name":"number"},"tags":{"default":": 1000 (1 second)"}},"onInterval":{"defaultValue":null,"description":"The callback function that will be called when the loading time exceeds the specified time.\\nIf not specified, the `onInterval` value from the `overtime` option of the `RefineProvider` will be used.","name":"onInterval","required":false,"type":{"name":"((elapsedInterval: number) => void)"},"tags":{"param":"elapsedInterval The elapsed time in milliseconds."}}},"generatedAt":1711477352702}')}}]);