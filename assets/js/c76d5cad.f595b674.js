"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4728],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var i=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),c=d(n),m=o,h=c["".concat(l,".").concat(m)]||c[m]||u[m]||r;return n?i.createElement(h,s(s({ref:t},p),{},{components:n})):i.createElement(h,s({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=c;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var d=2;d<r;d++)s[d]=n[d];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},26415:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>a,metadata:()=>d,toc:()=>u});n(67294);var i=n(3905);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const a={title:"Edit",swizzle:!0},l=void 0,d={unversionedId:"ui-integrations/ant-design/components/basic-views/edit/index",id:"ui-integrations/ant-design/components/basic-views/edit/index",title:"Edit",description:"`` \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043c\u0430\u043a\u0435\u0442, \u0434\u043e\u043f\u043e\u043b\u043d\u044f\u044e\u0449\u0438\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043a\u043d\u043e\u043f\u043a\u0430\u043c\u0438 \u0438 \u0438\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.",source:"@site/docs/ui-integrations/ant-design/components/basic-views/edit/index.md",sourceDirName:"ui-integrations/ant-design/components/basic-views/edit",slug:"/ui-integrations/ant-design/components/basic-views/edit/",permalink:"/ithub-itday-april-refine/docs/ui-integrations/ant-design/components/basic-views/edit/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/ui-integrations/ant-design/components/basic-views/edit/index.md",tags:[],version:"current",frontMatter:{title:"Edit",swizzle:!0},sidebar:"mainSidebar",previous:{title:"Create",permalink:"/ithub-itday-april-refine/docs/ui-integrations/ant-design/components/basic-views/create/"},next:{title:"List",permalink:"/ithub-itday-april-refine/docs/ui-integrations/ant-design/components/basic-views/list/"}},p={},u=[{value:"\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430",id:"\u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430",level:2},{value:"title",id:"title",level:3},{value:"saveButtonProps",id:"savebuttonprops",level:3},{value:"canDelete and deleteButtonProps",id:"candelete-and-deletebuttonprops",level:3},{value:"recordItemId",id:"recorditemid",level:3},{value:'breadcrumb <GlobalConfigBadge id="core/refine-component/#breadcrumb" />',id:"breadcrumb-",level:3},{value:"wrapperProps",id:"wrapperprops",level:3},{value:"headerProps",id:"headerprops",level:3},{value:"contentProps",id:"contentprops",level:3},{value:"headerButtons",id:"headerbuttons",level:3},{value:"headerButtonProps",id:"headerbuttonprops",level:3},{value:"footerButtons",id:"footerbuttons",level:3},{value:"footerButtonProps",id:"footerbuttonprops",level:3},{value:"autoSaveProps",id:"autosaveprops",level:3}],c=(m="GlobalConfigBadge",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var m;const h={toc:u};function g(e){var{components:t}=e,n=s(e,["components"]);return(0,i.kt)("wrapper",r(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){o(e,t,n[t])}))}return e}({},h,n),{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"<Edit>")," \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043c\u0430\u043a\u0435\u0442, \u0434\u043e\u043f\u043e\u043b\u043d\u044f\u044e\u0449\u0438\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043a\u043d\u043e\u043f\u043a\u0430\u043c\u0438 \u0438 \u0438\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live hideCode url=http://localhost:3000/posts/edit/123",live:!0,hideCode:!0,url:"http://localhost:3000/posts/edit/123"},'const { EditButton } = RefineAntd;\n\ninterface ICategory {\n  id: number;\n  title: string;\n}\n\n// visible-block-start\n\ninterface IPost {\n  id: number;\n  title: string;\n  content: string;\n  status: "published" | "draft" | "rejected";\n  category: { id: number };\n}\n\nimport { Edit, useForm, useSelect } from "@refinedev/antd";\nimport { Form, Input, Select } from "antd";\n\nconst PostEdit: React.FC = () => {\n  const { formProps, saveButtonProps, queryResult } = useForm<IPost>({\n    warnWhenUnsavedChanges: true,\n  });\n\n  const postData = queryResult?.data?.data;\n  const { selectProps: categorySelectProps } = useSelect<ICategory>({\n    resource: "categories",\n    defaultValue: postData?.category.id,\n  });\n\n  return (\n    <Edit saveButtonProps={saveButtonProps}>\n      <Form {...formProps} layout="vertical">\n        <Form.Item\n          label="Title"\n          name="title"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label="Category"\n          name={["category", "id"]}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select {...categorySelectProps} />\n        </Form.Item>\n        <Form.Item\n          label="Status"\n          name="status"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            options={[\n              {\n                label: "Published",\n                value: "published",\n              },\n              {\n                label: "Draft",\n                value: "draft",\n              },\n              {\n                label: "Rejected",\n                value: "rejected",\n              },\n            ]}\n          />\n        </Form.Item>\n      </Form>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton recordItemId="123">Edit Item 123</EditButton>\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("h2",{id:"\u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430"},"\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430"),(0,i.kt)("h3",{id:"title"},"title"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"title")," \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 ",(0,i.kt)("inlineCode",{parentName:"p"},"<Edit>"),'. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d \u043f\u0440\u0435\u0444\u0438\u043a\u0441 "Edit" \u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u0430, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, "Edit post".'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { EditButton } = RefineAntd;\nconst { default: simpleRest } = RefineSimpleRest;\n\nconst dataProvider = simpleRest("https://api.fake-rest.refine.dev");\n\nconst customDataProvider = {\n  ...dataProvider,\n  deleteOne: async ({ resource, id, variables }) => {\n    return {\n      data: {},\n    };\n  },\n};\n\n// visible-block-start\nimport { Edit } from "@refinedev/antd";\n\nconst PostEdit = () => {\n  return (\n    /* highlight-next-line */\n    <Edit title="Custom Title">\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit/2"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton recordItemId="2">Edit Item 2</EditButton>\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("h3",{id:"savebuttonprops"},"saveButtonProps"),(0,i.kt)("p",null,"\u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 ",(0,i.kt)("inlineCode",{parentName:"p"},"<Edit>")," \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043d\u043e\u043f\u043a\u0443 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439. \u0414\u043b\u044f \u0435\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,i.kt)("inlineCode",{parentName:"p"},"saveButtonProps"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { EditButton } = RefineAntd;\n\n// visible-block-start\nimport { Edit } from "@refinedev/antd";\n\nconst PostEdit = () => {\n  return (\n    /* highlight-next-line */\n    <Edit saveButtonProps={{ size: "small" }}>\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit/2"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u0414\u043b\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a ",(0,i.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/save-button"},"\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 ",(0,i.kt)("inlineCode",{parentName:"a"},"<SaveButton>")," ","\u2192"))),(0,i.kt)("h3",{id:"candelete-and-deletebuttonprops"},"canDelete and deleteButtonProps"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"canDelete")," \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0443 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0445\u0443\u043a ",(0,i.kt)("inlineCode",{parentName:"p"},"useDelete"),"."),(0,i.kt)("p",null,"\u0414\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u044d\u0442\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0438 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,i.kt)("inlineCode",{parentName:"p"},"deleteButtonProps"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/123"},'const { EditButton } = RefineAntd;\nconst { default: simpleRest } = RefineSimpleRest;\n\nconst dataProvider = simpleRest("https://api.fake-rest.refine.dev");\n\nconst customDataProvider = {\n  ...dataProvider,\n  deleteOne: async ({ resource, id, variables }) => {\n    return {\n      data: {},\n    };\n  },\n};\n\nconst authProvider = {\n  login: () => {\n    return {\n      success: true,\n      redirectTo: "/",\n    };\n  },\n  register: () => {\n    return {\n      success: true,\n    };\n  },\n  forgotPassword: () => {\n    return {\n      success: true,\n    };\n  },\n  updatePassword: () => {\n    return {\n      success: true,\n    };\n  },\n  logout: () => {\n    return {\n      success: true,\n      redirectTo: "/",\n    };\n  },\n  check: () => ({\n    authenticated: true,\n  }),\n  onError: () => ({}),\n  getPermissions: () => null,\n  getIdentity: () => null,\n};\n\n// visible-block-start\nimport { Edit } from "@refinedev/antd";\nimport { usePermissions } from "@refinedev/core";\n\nconst PostEdit = () => {\n  const { data: permissionsData } = usePermissions();\n  return (\n    <Edit\n      /* highlight-start */\n      canDelete={permissionsData?.includes("admin")}\n      deleteButtonProps={{ size: "small" }}\n      /* highlight-end */\n      saveButtonProps={{ size: "small" }}\n    >\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    authProvider={authProvider}\n    dataProvider={customDataProvider}\n    initialRoutes={["/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton recordItemId="123">Edit Item 123</EditButton>\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u0414\u043b\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u044c\u0442\u0435\u0441\u044c \u0441 ",(0,i.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/delete-button"},"\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439 ",(0,i.kt)("inlineCode",{parentName:"a"},"<DeleteButton>")," ","\u2192")," \u0438 ",(0,i.kt)("a",{parentName:"p",href:"/docs/authentication/hooks/use-permissions"},"\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439 ",(0,i.kt)("inlineCode",{parentName:"a"},"usePermission")," ","\u2192"))),(0,i.kt)("h3",{id:"recorditemid"},"recordItemId"),(0,i.kt)("p",null,"\u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 ",(0,i.kt)("inlineCode",{parentName:"p"},"<Edit>")," \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u043b\u0430\u0434\u0435\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e\u0431 ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u043a\u043d\u043e\u043f\u043a\u0430 ",(0,i.kt)("inlineCode",{parentName:"p"},"<RefreshButton>")," \u0440\u0430\u0431\u043e\u0442\u0430\u043b\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438, \u043f\u043e \u043b\u043e\u043a\u0430\u0446\u0438\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b, \u043d\u043e \u0435\u0441\u043b\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u0447\u0438\u0442\u0430\u043d\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u043c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u043a\u043d\u0430 \u0438\u043b\u0438 \u0434\u0440\u043e\u0432\u0435\u0440\u0430), \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,i.kt)("inlineCode",{parentName:"p"},"recordItemId"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { EditButton } = RefineAntd;\n\n// visible-block-start\nimport { Edit, useModalForm } from "@refinedev/antd";\nimport { Modal, Button } from "antd";\n\nconst PostEdit = () => {\n  const { modalProps, id, show } = useModalForm({\n    action: "edit",\n  });\n\n  return (\n    <div>\n      <Button onClick={() => show()}>Edit Button</Button>\n      <Modal {...modalProps}>\n        {/* highlight-next-line */}\n        <Edit recordItemId={id}>\n          <p>Rest of your page here</p>\n        </Edit>\n      </Modal>\n    </div>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit/2"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton recordItemId="2">Edit Item 2</EditButton>\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("h3",{id:"breadcrumb-"},"breadcrumb ",(0,i.kt)(c,{id:"core/refine-component/#breadcrumb",mdxType:"GlobalConfigBadge"})),(0,i.kt)("p",null,"\u0414\u043b\u044f \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0445\u043b\u0435\u0431\u043d\u044b\u0445 \u043a\u0440\u043e\u0448\u0435\u043a \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,i.kt)("inlineCode",{parentName:"p"},"breadcrumb"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { EditButton } = RefineAntd;\n\n// visible-block-start\nimport { Edit, Breadcrumb } from "@refinedev/antd";\n\nconst PostEdit = () => {\n  return (\n    <Edit\n      // highlight-start\n      breadcrumb={\n        <div\n          style={{\n            padding: "3px 6px",\n            border: "2px dashed cornflowerblue",\n          }}\n        >\n          <Breadcrumb />\n        </div>\n      }\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u0414\u043b\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a ",(0,i.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/breadcrumb"},"\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 ",(0,i.kt)("inlineCode",{parentName:"a"},"Breadcrumb")," ","\u2192"))),(0,i.kt)("h3",{id:"wrapperprops"},"wrapperProps"),(0,i.kt)("p",null,"\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0434\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0431\u0435\u0440\u0442\u043a\u0438 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 ",(0,i.kt)("inlineCode",{parentName:"p"},"<Edit/>"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { EditButton } = RefineAntd;\n\n// visible-block-start\nimport { Edit } from "@refinedev/antd";\n\nconst PostEdit = () => {\n  return (\n    <Edit\n      // highlight-start\n      wrapperProps={{\n        style: {\n          backgroundColor: "cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("h3",{id:"headerprops"},"headerProps"),(0,i.kt)("p",null,"\u0414\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0445\u0435\u0434\u0435\u0440\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 ",(0,i.kt)("inlineCode",{parentName:"p"},"<Edit/>")," \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,i.kt)("inlineCode",{parentName:"p"},"headerProps"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { EditButton } = RefineAntd;\n\n// visible-block-start\nimport { Edit } from "@refinedev/antd";\n\nconst PostEdit = () => {\n  return (\n    <Edit\n      // highlight-start\n      headerProps={{\n        subTitle: "This is a subtitle",\n        style: {\n          backgroundColor: "cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit/2"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("h3",{id:"contentprops"},"contentProps"),(0,i.kt)("p",null,"\u0414\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u043b\u043e\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 ",(0,i.kt)("inlineCode",{parentName:"p"},"<Edit/>")," \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,i.kt)("inlineCode",{parentName:"p"},"contentProps"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { EditButton } = RefineAntd;\n\n// visible-block-start\nimport { Edit } from "@refinedev/antd";\n\nconst PostEdit = () => {\n  return (\n    <Edit\n      // highlight-start\n      contentProps={{\n        style: {\n          backgroundColor: "cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u0414\u043b\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 ",(0,i.kt)("a",{parentName:"p",href:"https://ant.design/components/card/"},"\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 ",(0,i.kt)("inlineCode",{parentName:"a"},"Card")," ","\u2192"))),(0,i.kt)("h3",{id:"headerbuttons"},"headerButtons"),(0,i.kt)("p",null,"\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 ",(0,i.kt)("inlineCode",{parentName:"p"},"<Edit/>")," \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0434\u0432\u0435 \u043a\u043d\u043e\u043f\u043a\u0438 \u0432 \u0445\u0435\u0434\u0435\u0440\u0435: ",(0,i.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/list-button"},(0,i.kt)("inlineCode",{parentName:"a"},"<ListButton>"))," \u0438 ",(0,i.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/refresh-button"},(0,i.kt)("inlineCode",{parentName:"a"},"<RefreshButton>")),"."),(0,i.kt)("p",null,"\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0438 \u0445\u0435\u0434\u0435\u0440\u0430 \u0447\u0435\u0440\u0435\u0437 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,i.kt)("inlineCode",{parentName:"p"},"headerButtons"),". \u041e\u043d\u043e \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u043b\u0438\u0431\u043e \u0440\u0435\u043d\u0434\u0435\u0440-\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0432\u0438\u0434\u0430 ",(0,i.kt)("inlineCode",{parentName:"p"},"({ defaultButtons, refreshButtonProps, listButtonProps }) => React.ReactNode"),", \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0447\u0442\u043e\u0431\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0435 \u043a\u043d\u043e\u043f\u043a\u0438 \u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0438\u0445 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u043c\u0438."),(0,i.kt)("p",null,'\u0415\u0441\u043b\u0438 \u0440\u0435\u0441\u0443\u0440\u0441 "list" \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d, ',(0,i.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/list-button"},(0,i.kt)("inlineCode",{parentName:"a"},"<ListButton>"))," \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d \u043d\u0435 \u0431\u0443\u0434\u0435\u0442."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { EditButton } = RefineAntd;\n\n// visible-block-start\nimport { Edit } from "@refinedev/antd";\nimport { Button } from "antd";\n\nconst PostEdit = () => {\n  return (\n    <Edit\n      // highlight-start\n      headerButtons={({ defaultButtons }) => (\n        <>\n          {defaultButtons}\n          <Button type="primary">Custom Button</Button>\n        </>\n      )}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit/2"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { EditButton } = RefineAntd;\n\n// visible-block-start\nimport { Edit, ListButton, RefreshButton } from "@refinedev/antd";\nimport { Button } from "antd";\n\nconst PostEdit = () => {\n  return (\n    <Edit\n      // highlight-start\n      headerButtons={({ refreshButtonProps, listButtonProps }) => (\n        <>\n          <Button type="primary">Custom Button</Button>\n          <RefreshButton {...refreshButtonProps} meta={{ foo: "bar" }} />\n          {listButtonProps && (\n            <ListButton {...listButtonProps} meta={{ foo: "bar" }} />\n          )}\n        </>\n      )}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit/2"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("h3",{id:"headerbuttonprops"},"headerButtonProps"),(0,i.kt)("p",null,"\u0414\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0431\u0435\u0440\u0442\u043a\u0438 \u043d\u0430\u0434 \u043a\u043d\u043e\u043f\u043a\u0430\u043c\u0438 \u0445\u0435\u0434\u0435\u0440\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,i.kt)("inlineCode",{parentName:"p"},"headerButtonProps"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { EditButton } = RefineAntd;\n\n// visible-block-start\nimport { Edit } from "@refinedev/antd";\nimport { Button } from "antd";\n\nconst PostEdit = () => {\n  return (\n    <Edit\n      // highlight-start\n      headerButtonProps={{\n        style: {\n          backgroundColor: "cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n      headerButtons={<Button type="primary">Custom Button</Button>}\n    >\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("h3",{id:"footerbuttons"},"footerButtons"),(0,i.kt)("p",null,"\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 ",(0,i.kt)("inlineCode",{parentName:"p"},"<Edit/>")," \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043d\u043e\u043f\u043a\u0438 ",(0,i.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/save-button"},(0,i.kt)("inlineCode",{parentName:"a"},"<SaveButton>"))," \u0438 ",(0,i.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/delete-button"},(0,i.kt)("inlineCode",{parentName:"a"},"<DeleteButton>"))," \u0432 \u0444\u0443\u0442\u0435\u0440\u0435."),(0,i.kt)("p",null,"\u041a\u043d\u043e\u043f\u043a\u0438 \u0444\u0443\u0442\u0435\u0440\u0430 \u043c\u043e\u0436\u043d\u043e \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,i.kt)("inlineCode",{parentName:"p"},"footerButtons"),", \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u043b\u0438\u0431\u043e \u0440\u0435\u043d\u0434\u0435\u0440-\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0432\u0438\u0434\u0430 ",(0,i.kt)("inlineCode",{parentName:"p"},"({ defaultButtons, saveButtonProps, deleteButtonProps }) => React.ReactNode"),"."),(0,i.kt)("p",null,"\u0415\u0441\u043b\u0438 ",(0,i.kt)("a",{parentName:"p",href:"#candelete-and-deletebuttonprops"},(0,i.kt)("inlineCode",{parentName:"a"},"canDelete"))," \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0432 ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),", \u043a\u043d\u043e\u043f\u043a\u0430 ",(0,i.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/delete-button"},(0,i.kt)("inlineCode",{parentName:"a"},"<DeleteButton>"))," \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { EditButton } = RefineAntd;\n\n// visible-block-start\nimport { Edit } from "@refinedev/antd";\nimport { Button } from "antd";\n\nconst PostEdit = () => {\n  return (\n    <Edit\n      // highlight-start\n      footerButtons={({ defaultButtons }) => (\n        <>\n          {defaultButtons}\n          <Button type="primary">Custom Button</Button>\n        </>\n      )}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { EditButton } = RefineAntd;\n\n// visible-block-start\nimport { Edit, SaveButton, DeleteButton } from "@refinedev/antd";\nimport { Button } from "antd";\n\nconst PostEdit = () => {\n  return (\n    <Edit\n      // highlight-start\n      footerButtons={({ saveButtonProps, deleteButtonProps }) => (\n        <>\n          <Button type="primary">Custom Button</Button>\n          <SaveButton {...saveButtonProps} hideText />\n          {deleteButtonProps && (\n            <DeleteButton {...deleteButtonProps} hideText />\n          )}\n        </>\n      )}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("h3",{id:"footerbuttonprops"},"footerButtonProps"),(0,i.kt)("p",null,"\u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043e\u0431\u0435\u0440\u0442\u043a\u0443 \u043d\u0430\u0434 \u043a\u043d\u043e\u043f\u043a\u0430\u043c\u0438 \u0444\u0443\u0442\u0435\u0440\u0430 \u043c\u043e\u0436\u043d\u043e \u0447\u0435\u0440\u0435\u0437 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,i.kt)("inlineCode",{parentName:"p"},"footerButtonProps"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { EditButton } = RefineAntd;\n\n// visible-block-start\nimport { Edit } from "@refinedev/antd";\n\nconst PostEdit = () => {\n  return (\n    <Edit\n      // highlight-start\n      footerButtonProps={{\n        style: {\n          // hide-start\n          float: "right",\n          marginRight: 24,\n          // hide-end\n          backgroundColor: "cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,i.kt)("h3",{id:"autosaveprops"},"autoSaveProps"),(0,i.kt)("p",null,"\u0415\u0441\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0430\u0432\u0442\u043e\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f, \u0437\u0430\u0434\u0430\u0432 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,i.kt)("inlineCode",{parentName:"p"},"autoSaveProps"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live url=http://localhost:3000/posts/edit/123",live:!0,url:"http://localhost:3000/posts/edit/123"},'const { EditButton } = RefineAntd;\n\nimport { Edit, useForm, useSelect } from "@refinedev/antd";\nimport { Form, Input, Select } from "antd";\n\n// visible-block-start\nconst PostEdit = () => {\n  const {\n    formProps,\n    saveButtonProps,\n    queryResult,\n    // highlight-next-line\n    autoSaveProps,\n  } = useForm({\n    warnWhenUnsavedChanges: true,\n    // highlight-start\n    autoSave: {\n      enabled: true,\n    },\n    // highlight-end\n  });\n\n  const postData = queryResult?.data?.data;\n  const { selectProps: categorySelectProps } = useSelect({\n    resource: "categories",\n    defaultValue: postData?.category.id,\n  });\n\n  return (\n    <Edit\n      saveButtonProps={saveButtonProps}\n      // highlight-next-line\n      autoSaveProps={autoSaveProps}\n    >\n      <Form {...formProps} layout="vertical">\n        <Form.Item\n          label="Title"\n          name="title"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label="Category"\n          name={["category", "id"]}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select {...categorySelectProps} />\n        </Form.Item>\n        <Form.Item\n          label="Status"\n          name="status"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            options={[\n              {\n                label: "Published",\n                value: "published",\n              },\n              {\n                label: "Draft",\n                value: "draft",\n              },\n              {\n                label: "Rejected",\n                value: "rejected",\n              },\n            ]}\n          />\n        </Form.Item>\n      </Form>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <EditButton recordItemId="123">Edit Item 123</EditButton>\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')))}g.isMDXComponent=!0}}]);