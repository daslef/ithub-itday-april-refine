"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1114],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>h});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),p=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=p(e.components);return o.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},c=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),c=p(t),h=r,m=c["".concat(l,".").concat(h)]||c[h]||u[h]||i;return t?o.createElement(m,s(s({ref:n},d),{},{components:t})):o.createElement(m,s({ref:n},d))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=c;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var p=2;p<i;p++)s[p]=t[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}c.displayName="MDXCreateElement"},78097:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>w,frontMatter:()=>a,metadata:()=>p,toc:()=>u});t(67294);var o=t(3905);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const a={title:"Show",swizzle:!0},l=void 0,p={unversionedId:"ui-integrations/ant-design/components/basic-views/show/index",id:"ui-integrations/ant-design/components/basic-views/show/index",title:"Show",description:"`` \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043c\u0430\u043a\u0435\u0442 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u0430.",source:"@site/docs/ui-integrations/ant-design/components/basic-views/show/index.md",sourceDirName:"ui-integrations/ant-design/components/basic-views/show",slug:"/ui-integrations/ant-design/components/basic-views/show/",permalink:"/ithub-itday-april-refine/docs/ui-integrations/ant-design/components/basic-views/show/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/ui-integrations/ant-design/components/basic-views/show/index.md",tags:[],version:"current",frontMatter:{title:"Show",swizzle:!0},sidebar:"mainSidebar",previous:{title:"List",permalink:"/ithub-itday-april-refine/docs/ui-integrations/ant-design/components/basic-views/list/"},next:{title:"Create",permalink:"/ithub-itday-april-refine/docs/ui-integrations/ant-design/components/buttons/create-button/"}},d={},u=[{value:"\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430",id:"\u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430",level:2},{value:"title",id:"title",level:3},{value:"canDelete and canEdit",id:"candelete-and-canedit",level:3},{value:"recordItemId",id:"recorditemid",level:3},{value:'breadcrumb <GlobalConfigBadge id="core/refine-component/#breadcrumb" />',id:"breadcrumb-",level:3},{value:"wrapperProps",id:"wrapperprops",level:3},{value:"headerProps",id:"headerprops",level:3},{value:"contentProps",id:"contentprops",level:3},{value:"headerButtons",id:"headerbuttons",level:3},{value:"headerButtonProps",id:"headerbuttonprops",level:3}],c=(h="GlobalConfigBadge",function(e){return console.warn("Component "+h+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var h;const m={toc:u};function w(e){var{components:n}=e,t=s(e,["components"]);return(0,o.kt)("wrapper",i(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},o=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),o.forEach((function(n){r(e,n,t[n])}))}return e}({},m,t),{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"<Show>")," \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043c\u0430\u043a\u0435\u0442 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u0430."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live hideCode url=http://localhost:3000/posts/show/2",live:!0,hideCode:!0,url:"http://localhost:3000/posts/show/2"},'// visible-block-start\nimport { Show, MarkdownField } from "@refinedev/antd";\nimport { Typography } from "antd";\nimport { useShow, useOne } from "@refinedev/core";\n\nconst { Title, Text } = Typography;\n\nconst PostShow = () => {\n  const { queryResult } = useShow();\n  const { data, isLoading } = queryResult;\n  const record = data?.data;\n\n  const { data: categoryData, isLoading: categoryIsLoading } = useOne({\n    resource: "categories",\n    id: record?.category.id || "",\n    queryOptions: {\n      enabled: !!record,\n    },\n  });\n\n  return (\n    <Show isLoading={isLoading}>\n      <Title level={5}>Id</Title>\n      <Text>{record?.id}</Text>\n\n      <Title level={5}>Title</Title>\n      <Text>{record?.title}</Text>\n\n      <Title level={5}>Category</Title>\n      <Text>{categoryIsLoading ? "Loading..." : categoryData?.data.title}</Text>\n\n      <Title level={5}>Content</Title>\n      <MarkdownField value={record?.content} />\n    </Show>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/show/2"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <ShowButton recordItemId="2">Edit Item 2</ShowButton>\n          </div>\n        ),\n        show: PostShow,\n      },\n    ]}\n  />,\n);\n')),(0,o.kt)("h2",{id:"\u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430"},"\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430"),(0,o.kt)("h3",{id:"title"},"title"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"title")," \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 ",(0,o.kt)("inlineCode",{parentName:"p"},"<Show>"),'. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d \u043f\u0440\u0435\u0444\u0438\u043a\u0441 "Show" \u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u0430, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, "Show post".'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/show/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/show/2"},'const { ShowButton } = RefineAntd;\nconst { default: simpleRest } = RefineSimpleRest;\n\nconst dataProvider = simpleRest("https://api.fake-rest.refine.dev");\n\nconst customDataProvider = {\n  ...dataProvider,\n  deleteOne: async ({ resource, id, variables }) => {\n    return {\n      data: {},\n    };\n  },\n};\n\n// visible-block-start\nimport { Show } from "@refinedev/antd";\n\nconst PostShow = () => {\n  return (\n    /* highlight-next-line */\n    <Show title="Custom Title">\n      <p>Rest of your page here</p>\n    </Show>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/show/2"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <ShowButton recordItemId="2">Show Item 2</ShowButton>\n          </div>\n        ),\n        show: PostShow,\n      },\n    ]}\n  />,\n);\n')),(0,o.kt)("h3",{id:"candelete-and-canedit"},"canDelete and canEdit"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"canDelete")," \u0438 ",(0,o.kt)("inlineCode",{parentName:"p"},"canEdit")," \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0438 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f."),(0,o.kt)("p",null,"\u041a\u043d\u043e\u043f\u043a\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0445\u0443\u043a ",(0,o.kt)("inlineCode",{parentName:"p"},"useDelete"),", \u0430 \u043a\u043d\u043e\u043f\u043a\u0430 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/show/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/show/2"},'const { ShowButton, Edit } = RefineAntd;\n\nconst { default: simpleRest } = RefineSimpleRest;\n\nconst dataProvider = simpleRest("https://api.fake-rest.refine.dev");\n\nconst customDataProvider = {\n  ...dataProvider,\n  deleteOne: async ({ resource, id, variables }) => {\n    return {\n      data: {},\n    };\n  },\n};\n\nconst authProvider = {\n  login: async () => {\n    return {\n      success: true,\n      redirectTo: "/",\n    };\n  },\n  register: async () => {\n    return {\n      success: true,\n    };\n  },\n  forgotPassword: async () => {\n    return {\n      success: true,\n    };\n  },\n  updatePassword: async () => {\n    return {\n      success: true,\n    };\n  },\n  logout: async () => {\n    return {\n      success: true,\n      redirectTo: "/",\n    };\n  },\n  check: () => ({\n    authenticated: true,\n  }),\n  onError: async (error) => {\n    console.error(error);\n    return { error };\n  },\n  getPermissions: async () => ["admin"],\n  getIdentity: async () => null,\n};\n\n// visible-block-start\nimport { Show } from "@refinedev/antd";\nimport { usePermissions } from "@refinedev/core";\n\nconst PostShow = () => {\n  const { data: permissionsData } = usePermissions();\n  return (\n    <Show\n      /* highlight-start */\n      canDelete={permissionsData?.includes("admin")}\n      canEdit={permissionsData?.includes("admin")}\n      /* highlight-end */\n    >\n      <p>Rest of your page here</p>\n    </Show>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    authProvider={authProvider}\n    dataProvider={customDataProvider}\n    initialRoutes={["/posts/show/2"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <ShowButton>Show Item 2</ShowButton>\n          </div>\n        ),\n        show: PostShow,\n        edit: () => {\n          return <Edit>Edit Page</Edit>;\n        },\n      },\n    ]}\n  />,\n);\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e ",(0,o.kt)("a",{parentName:"p",href:"/docs/authentication/hooks/use-permissions"},"\u0445\u0443\u043a\u0435 ",(0,o.kt)("inlineCode",{parentName:"a"},"usePermission")," ","\u2192"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\u0445 ",(0,o.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/delete-button"},(0,o.kt)("inlineCode",{parentName:"a"},"<DeleteButton>"))," \u0438 ",(0,o.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/edit-button"},(0,o.kt)("inlineCode",{parentName:"a"},"<EditButton>")),".")),(0,o.kt)("h3",{id:"recorditemid"},"recordItemId"),(0,o.kt)("p",null,"\u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 ",(0,o.kt)("inlineCode",{parentName:"p"},"<Show>")," \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u043b\u0430\u0434\u0435\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e\u0431 ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438, \u043f\u043e \u043b\u043e\u043a\u0430\u0446\u0438\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b, \u043d\u043e \u0435\u0441\u043b\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u0447\u0438\u0442\u0430\u043d\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u043c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u043a\u043d\u0430 \u0438\u043b\u0438 \u0434\u0440\u043e\u0432\u0435\u0440\u0430), \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,o.kt)("inlineCode",{parentName:"p"},"recordItemId"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/show/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/show/2"},'const { ShowButton } = RefineAntd;\n\n// visible-block-start\nimport { Show, useModalForm } from "@refinedev/antd";\nimport { Modal, Button } from "antd";\n\nconst PostShow = () => {\n  const { modalProps, id, show } = useModalForm({\n    action: "show",\n  });\n\n  return (\n    <div>\n      <Button onClick={() => show()}>Show Button</Button>\n      <Modal {...modalProps}>\n        {/* highlight-next-line */}\n        <Show recordItemId={id}>\n          <p>Rest of your page here</p>\n        </Show>\n      </Modal>\n    </div>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/show/2"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <ShowButton recordItemId="2">Show Item 2</ShowButton>\n          </div>\n        ),\n        show: PostShow,\n      },\n    ]}\n  />,\n);\n')),(0,o.kt)("h3",{id:"breadcrumb-"},"breadcrumb ",(0,o.kt)(c,{id:"core/refine-component/#breadcrumb",mdxType:"GlobalConfigBadge"})),(0,o.kt)("p",null,"\u0414\u043b\u044f \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0445\u043b\u0435\u0431\u043d\u044b\u0445 \u043a\u0440\u043e\u0448\u0435\u043a \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,o.kt)("inlineCode",{parentName:"p"},"breadcrumb"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/show/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/show/2"},'const { ShowButton } = RefineAntd;\n\n// visible-block-start\nimport { Show, Breadcrumb } from "@refinedev/antd";\n\nconst PostShow = () => {\n  return (\n    <Show\n      // highlight-start\n      breadcrumb={\n        <div\n          style={{\n            padding: "3px 6px",\n            border: "2px dashed cornflowerblue",\n          }}\n        >\n          <Breadcrumb />\n        </div>\n      }\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Show>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/show"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <ShowButton />\n          </div>\n        ),\n        show: PostShow,\n      },\n    ]}\n  />,\n);\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u0414\u043b\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a ",(0,o.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/breadcrumb"},"\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 ",(0,o.kt)("inlineCode",{parentName:"a"},"Breadcrumb")," ","\u2192"))),(0,o.kt)("h3",{id:"wrapperprops"},"wrapperProps"),(0,o.kt)("p",null,"\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0434\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0431\u0435\u0440\u0442\u043a\u0438 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 ",(0,o.kt)("inlineCode",{parentName:"p"},"<Show/>"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/show/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/show/2"},'const { ShowButton } = RefineAntd;\n\n// visible-block-start\nimport { Show } from "@refinedev/antd";\n\nconst PostShow = () => {\n  return (\n    <Show\n      // highlight-start\n      wrapperProps={{\n        style: {\n          backgroundColor: "cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Show>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/show"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <ShowButton />\n          </div>\n        ),\n        show: PostShow,\n      },\n    ]}\n  />,\n);\n')),(0,o.kt)("h3",{id:"headerprops"},"headerProps"),(0,o.kt)("p",null,"\u0414\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0445\u0435\u0434\u0435\u0440\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 ",(0,o.kt)("inlineCode",{parentName:"p"},"<Show/>")," \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,o.kt)("inlineCode",{parentName:"p"},"headerProps"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/show/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/show/2"},'const { ShowButton } = RefineAntd;\n\n// visible-block-start\nimport { Show } from "@refinedev/antd";\n\nconst PostShow = () => {\n  return (\n    <Show\n      // highlight-start\n      headerProps={{\n        subTitle: "This is a subtitle",\n        style: {\n          backgroundColor: "cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Show>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/show/2"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <ShowButton />\n          </div>\n        ),\n        show: PostShow,\n      },\n    ]}\n  />,\n);\n')),(0,o.kt)("h3",{id:"contentprops"},"contentProps"),(0,o.kt)("p",null,"\u0414\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u043b\u043e\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 ",(0,o.kt)("inlineCode",{parentName:"p"},"<Show/>")," \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,o.kt)("inlineCode",{parentName:"p"},"contentProps"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/show/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/show/2"},'const { ShowButton } = RefineAntd;\n\n// visible-block-start\nimport { Show } from "@refinedev/antd";\n\nconst PostShow = () => {\n  return (\n    <Show\n      // highlight-start\n      contentProps={{\n        style: {\n          backgroundColor: "cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Show>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/show"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <ShowButton />\n          </div>\n        ),\n        show: PostShow,\n      },\n    ]}\n  />,\n);\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u0414\u043b\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 ",(0,o.kt)("a",{parentName:"p",href:"https://ant.design/components/card/"},"\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 ",(0,o.kt)("inlineCode",{parentName:"a"},"Card")," ","\u2192"))),(0,o.kt)("h3",{id:"headerbuttons"},"headerButtons"),(0,o.kt)("p",null,"\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 ",(0,o.kt)("inlineCode",{parentName:"p"},"<Show/>")," \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043d\u043e\u043f\u043a\u0438 ",(0,o.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/list-button"},(0,o.kt)("inlineCode",{parentName:"a"},"<ListButton>")),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/edit-button"},(0,o.kt)("inlineCode",{parentName:"a"},"<EditButton>")),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/delete-button"},(0,o.kt)("inlineCode",{parentName:"a"},"<DeleteButton>"))," \u0438 ",(0,o.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/refresh-button"},(0,o.kt)("inlineCode",{parentName:"a"},"<RefreshButton>"))," \u0432 \u0445\u0435\u0434\u0435\u0440\u0435."),(0,o.kt)("p",null,"\u041a\u043d\u043e\u043f\u043a\u0438 \u0445\u0435\u0434\u0435\u0440\u0430 \u043c\u043e\u0436\u043d\u043e \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,o.kt)("inlineCode",{parentName:"p"},"headerButtons"),", \u043f\u0435\u0440\u0435\u0434\u0430\u0432 \u0432 \u043d\u0435\u0433\u043e \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0439 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u043b\u0438\u0431\u043e \u0440\u0435\u043d\u0434\u0435\u0440-\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0432\u0438\u0434\u0430 ",(0,o.kt)("inlineCode",{parentName:"p"},"({ defaultButtons, listButtonProps, editButtonProps, deleteButtonProps, refreshButtonProps }) => React.ReactNode"),"."),(0,o.kt)("p",null,"\u0415\u0441\u043b\u0438 ",(0,o.kt)("a",{parentName:"p",href:"#candelete-and-canedit"},(0,o.kt)("inlineCode",{parentName:"a"},"canDelete"))," \u0432 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438 ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/delete-button"},(0,o.kt)("inlineCode",{parentName:"a"},"<DeleteButton>"))," \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d \u043d\u0435 \u0431\u0443\u0434\u0435\u0442."),(0,o.kt)("p",null,"\u0415\u0441\u043b\u0438 ",(0,o.kt)("a",{parentName:"p",href:"#candelete-and-canedit"},(0,o.kt)("inlineCode",{parentName:"a"},"canEdit"))," \u0432 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438 ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/ui-integrations/ant-design/components/buttons/edit-button"},(0,o.kt)("inlineCode",{parentName:"a"},"<EditButton>"))," \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d \u043d\u0435 \u0431\u0443\u0434\u0435\u0442."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/show/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/show/2"},'const { ShowButton } = RefineAntd;\n\n// visible-block-start\nimport { Show } from "@refinedev/antd";\nimport { Button } from "antd";\n\nconst PostShow = () => {\n  return (\n    <Show\n      // highlight-start\n      headerButtons={({ defaultButtons }) => (\n        <>\n          {defaultButtons}\n          <Button type="primary">Custom Button</Button>\n        </>\n      )}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Show>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/show/2"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <ShowButton />\n          </div>\n        ),\n        show: PostShow,\n      },\n    ]}\n  />,\n);\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/show/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/show/2"},'const { ShowButton } = RefineAntd;\n\n// visible-block-start\nimport {\n  Show,\n  ListButton,\n  EditButton,\n  DeleteButton,\n  RefreshButton,\n} from "@refinedev/antd";\nimport { Button } from "antd";\n\nconst PostShow = () => {\n  return (\n    <Show\n      // highlight-start\n      headerButtons={({\n        deleteButtonProps,\n        editButtonProps,\n        listButtonProps,\n        refreshButtonProps,\n      }) => (\n        <>\n          <Button type="primary">Custom Button</Button>\n          {listButtonProps && (\n            <ListButton {...listButtonProps} meta={{ foo: "bar" }} />\n          )}\n          {editButtonProps && (\n            <EditButton {...editButtonProps} meta={{ foo: "bar" }} />\n          )}\n          {deleteButtonProps && (\n            <DeleteButton {...deleteButtonProps} meta={{ foo: "bar" }} />\n          )}\n          <RefreshButton {...refreshButtonProps} meta={{ foo: "bar" }} />\n        </>\n      )}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Show>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/show/2"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <ShowButton />\n          </div>\n        ),\n        show: PostShow,\n      },\n    ]}\n  />,\n);\n')),(0,o.kt)("h3",{id:"headerbuttonprops"},"headerButtonProps"),(0,o.kt)("p",null,"\u0414\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0431\u0435\u0440\u0442\u043a\u0438 \u043d\u0430\u0434 \u043a\u043d\u043e\u043f\u043a\u0430\u043c\u0438 \u0445\u0435\u0434\u0435\u0440\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e ",(0,o.kt)("inlineCode",{parentName:"p"},"headerButtonProps"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/2",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/2"},'const { ShowButton } = RefineAntd;\n\n// visible-block-start\nimport { Show } from "@refinedev/antd";\nimport { Button } from "antd";\n\nconst PostShow = () => {\n  return (\n    <Show\n      // highlight-start\n      headerButtonProps={{\n        style: {\n          backgroundColor: "cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n      headerButtons={<Button type="primary">Custom Button</Button>}\n    >\n      <p>Rest of your page here</p>\n    </Show>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineAntdDemo\n    initialRoutes={["/posts/show"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <ShowButton />\n          </div>\n        ),\n        show: PostShow,\n      },\n    ]}\n  />,\n);\n')))}w.isMDXComponent=!0}}]);