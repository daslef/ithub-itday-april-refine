"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[68579],{68579:e=>{e.exports=JSON.parse('{"filePath":"/home/daslef/Downloads/refine/packages/core/src/index.tsx","description":"**refine** has a default auth page form which is served on `/login` route when the `authProvider` configuration is provided.","displayName":"AuthPage","props":{"type":{"defaultValue":{"value":"\\"login\\""},"description":"","name":"type","required":false,"type":{"name":"\\"login\\" | \\"register\\" | \\"forgotPassword\\" | \\"updatePassword\\"","raw":"\\"login\\" | \\"register\\" | \\"forgotPassword\\" | \\"updatePassword\\"","value":[{"value":"\\"login\\""},{"value":"\\"register\\""},{"value":"\\"forgotPassword\\""},{"value":"\\"updatePassword\\""}]},"tags":{"description":"The type of the auth page.\\nThe type of the auth page.\\nThe type of the auth page.\\nThe type of the auth page.","default":"\\"login\\"","optional":""}},"providers":{"defaultValue":null,"description":"","name":"providers","required":false,"type":{"name":"[OAuthProvider](/docs/api-reference/core/components/auth-page/#interface)"},"tags":{"description":"Providers array for login with third party auth services.\\nProviders array for login with third party auth services.","type":"[OAuthProvider] (/docs/api-reference/core/components/auth-page/#interface)","optional":""}},"registerLink":{"defaultValue":{"value":"`\\"/register\\"`"},"description":"","name":"registerLink","required":false,"type":{"name":"ReactNode"},"tags":{"description":"Render a redirect to register page button node. If set to false, register button will not be rendered.","default":"`\\"/register\\"`","optional":""}},"forgotPasswordLink":{"defaultValue":{"value":"`\\"/forgot-password\\"`"},"description":"","name":"forgotPasswordLink","required":false,"type":{"name":"ReactNode"},"tags":{"description":"Render a redirect to forgot password page button node. If set to false, forgot password button will not be rendered.","default":"`\\"/forgot-password\\"`","optional":""}},"rememberMe":{"defaultValue":null,"description":"","name":"rememberMe","required":false,"type":{"name":"ReactNode"},"tags":{"description":"Render a remember me button node. If set to false, remember me button will not be rendered.","optional":""}},"hideForm":{"defaultValue":null,"description":"","name":"hideForm","required":false,"type":{"name":"boolean"},"tags":{"description":"Can be used to hide the form components\\nCan be used to hide the form components","optional":""}},"wrapperProps":{"defaultValue":null,"description":"","name":"wrapperProps","required":false,"type":{"name":"DivPropsType"},"tags":{"description":"The props that will be passed to the wrapper component.","optional":""}},"contentProps":{"defaultValue":null,"description":"","name":"contentProps","required":false,"type":{"name":"DivPropsType"},"tags":{"description":"The props that will be passed to the content component.","optional":""}},"renderContent":{"defaultValue":null,"description":"","name":"renderContent","required":false,"type":{"name":"((content: ReactNode, title: ReactNode) => ReactNode)"},"tags":{"description":"This method gives you the ability to render a custom content node.","optional":""}},"formProps":{"defaultValue":null,"description":"","name":"formProps","required":false,"type":{"name":"FormPropsType"},"tags":{"description":"Can be used to pass additional properties for the `Form`","optional":""}},"title":{"defaultValue":null,"description":"","name":"title","required":false,"type":{"name":"ReactNode"},"tags":{"description":"Can be used to pass `Title`","optional":""}},"loginLink":{"defaultValue":{"value":"`\\"/login\\"`"},"description":"","name":"loginLink","required":false,"type":{"name":"ReactNode"},"tags":{"description":"Render a redirect to login page button node. If set to false, login button will not be rendered.\\nrender a redirect to login page button node. If set to false, login button will not be rendered.","default":"`\\"/login\\"`","optional":""}}},"generatedAt":1711477352700}')}}]);