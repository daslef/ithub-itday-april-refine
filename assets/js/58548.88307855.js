"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[58548],{58548:e=>{e.exports=JSON.parse('{"filePath":"/home/daslef/Downloads/refine/packages/core/src/index.tsx","description":"`useCan` uses the `can` as the query function for `react-query`\'s {@link https://react-query.tanstack.com/guides/queries `useQuery`}. It takes the parameters that `can` takes. It can also be configured with `queryOptions` for `useQuery`. Returns the result of `useQuery`.","displayName":"useCan","props":{"resource":{"defaultValue":null,"description":"Resource name for API data interactions","name":"resource","required":false,"type":{"name":"string"},"tags":{}},"action":{"defaultValue":null,"description":"Intended action on resource","name":"action","required":true,"type":{"name":"string"},"tags":{}},"params":{"defaultValue":null,"description":"Parameters associated with the resource","name":"params","required":false,"type":{"name":"{ resource? : [IResourceItem](https://refine.dev/docs/api-reference/core/interfaceReferences/#canparams), id?: [BaseKey](https://refine.dev/docs/api-reference/core/interfaceReferences/#basekey), [key: string]: any }"},"tags":{"type":"{ resource? : [IResourceItem](https://refine.dev/docs/api-reference/core/interfaceReferences/#canparams), id?: [BaseKey](https://refine.dev/docs/api-reference/core/interfaceReferences/#basekey), [key: string]: any }"}},"queryOptions":{"defaultValue":null,"description":"react-query\'s [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options","name":"queryOptions","required":false,"type":{"name":"any"},"tags":{}}},"generatedAt":1711477352702}')}}]);